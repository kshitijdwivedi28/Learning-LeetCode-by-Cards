 Add Operation - Doubly Linked List
Report Issue
If we want to insert a new node cur after an existing node prev, we can divide this process into two steps:

link cur with prev and next, where next is the original next node of prev;
re-link the prev and next with cur. 
Similar to the singly linked list, both the time and the space complexity of the add operation are O(1).

 

An Example


Let's add a new node 9 after the existing node 6:

link cur (node 9) with prev (node 6) and next (node 15)
re-link prev (node 6) and next (node 15) with cur (node 9)
What if we want to insert a new node at the beginning or at the end?


Delete Operation - Doubly Linked List
Report Issue
If we want to delete an existing node cur from the doubly linked list, we can simply link its previous node prev with its next node next.

Unlike the singly linked list, it is easy to get the previous node in constant time with the "prev" field.

Since we no longer need to traverse the linked list to get the previous node, both the time and space complexity are O(1).

 

An Example


Our goal is to delete the node 6 from the doubly linked list.

So we link its previous node 23 and its next node 15:



Node 6 is not in our doubly linked list now.

What if we want to delete the first node or the last node?
